name: Build and Push Image

env:
  DEFAULT_RELEASE_VERSION: "v1.0.0"

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/**'
      - 'helm-charts/k8s-mediaserver/**'
      - 'Dockerfile'
      - 'Dockerfile-ARM64'
  workflow_dispatch:

jobs:
  release:
    name: Check and manage versioning
    runs-on: tduarte #ubuntu-latest
    outputs:
      release_tag: ${{ steps.bump-version.outputs.new_tag || env.DEFAULT_RELEASE_VERSION }}
      previous_tag: ${{ steps.bump-version.outputs.previous_tag || env.DEFAULT_RELEASE_VERSION }}

    steps:
      - uses: actions/checkout@v3

      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v6.1
        id: bump-version
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          default_bump: false

#  build_image:
#    needs: versioning
#    name: Build and push container images
#    runs-on: tduarte #ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3

#      - name: install buildah
#        run: |
#          . /etc/lsb-release && \
#          sudo apt-get update && \
#          sudo apt-get install -y gnupg2 && \
#          echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${DISTRIB_RELEASE}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list && \
#          curl -fsL "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_${DISTRIB_RELEASE}/Release.key" | sudo apt-key add - && \
#          sudo apt-get update && \
#          sudo apt-get install -y buildah fuse-overlayfs
#          sudo sed -i 's/^\[machine\]$/#\[machine\]/' /usr/share/containers/containers.conf

      - name: Build Image - x86_64
        id: build-image-x86_64
        uses: redhat-actions/buildah-build@v2.12
        with:
          image: k8s-mediaserver-operator
          tags: latest ${{ needs.versioning.outputs.release_tag }}
          containerfiles: |
            ./Dockerfile

#      - name: Build Image - ARM64
#        id: build-image-arm64
#        uses: redhat-actions/buildah-build@v2
#        with:
#          image: k8s-mediaserver-operator
#          tags: latest-arm64 ${{ needs.versioning.outputs.release_tag }}-arm64
#          containerfiles: |
#            ./Dockerfile-ARM64

      - name: Push To quay.io
        id: push-x86
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-x86_64.outputs.image }}
          tags: latest ${{ needs.versioning.outputs.release_tag }}
          registry: ${{ secrets.DOCKER_PUSH_REPO }}
          username: ${{ secrets.DOCKER_PUSH_USERNAME }}
          password: ${{ secrets.DOCKER_PUSH_TOKEN }}

#      - name: Push
#        id: push-arm64
#        uses: redhat-actions/push-to-registry@v2
#        with:
#          image: ${{ steps.build-image-arm64.outputs.image }}
#          tags: latest-arm64 ${{ needs.versioning.outputs.release_tag }}-arm64
#          registry: ${{ secrets.DOCKER_PUSH_REPO }}
#          username: ${{ secrets.DOCKER_PUSH_USERNAME }}
#          password: ${{ secrets.DOCKER_PUSH_TOKEN }}

      - name: Print image url
        run: echo "Images pushed to ${{ steps.push-x86.outputs.registry-paths }} and ${{ steps.push-arm64.outputs.registry-paths }}"

      - name: Bump operator version in CRD
        run: |
          sed -i "s/k8s-mediaserver-operator:${{ steps.versioning.outputs.previous_tag || env.DEFAULT_RELEASE_VERSION }}/k8s-mediaserver-operator:${{ steps.versioning.outputs.release_tag || env.DEFAULT_RELEASE_VERSION }}/g" k8s-mediaserver-operator.yml k8s-mediaserver-operator-arm64.yml

      - name: Commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Bumping operator definition to comply with ${{ steps.versioning.outputs.release_tag || env.DEFAULT_RELEASE_VERSION }}"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ github.ref }}
